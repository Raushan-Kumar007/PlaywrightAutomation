name: Playwright CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  playwright-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        spec:
          - tests/login.spec.ts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Restore server.key
        run: echo "${{ secrets.SERVER_KEY }}" > server.key

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright Tests - ${{ matrix.spec }}
        run: npx playwright test ${{ matrix.spec }}
        env:
          SF_CLIENT_ID: ${{ secrets.SF_CLIENT_ID }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}

      - name: Sanitize spec name for artifacts
        id: sanitize
        run: echo "sanitized_name=$(echo '${{ matrix.spec }}' | sed 's#[/: ]#-#g')" >> $GITHUB_OUTPUT

      - name: Zip Test Results (Optional, but safer)
        if: failure()
        run: zip -r test-results-${{ steps.sanitize.outputs.sanitized_name }}.zip test-results || true

      - name: Upload Playwright Report on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ steps.sanitize.outputs.sanitized_name }}
          path: playwright-report/

      - name: Upload Zipped Test Results on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ steps.sanitize.outputs.sanitized_name }}
          path: test-results-${{ steps.sanitize.outputs.sanitized_name }}.zip
